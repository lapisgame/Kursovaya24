{
    "index": 11,
    "title": "Лекция 11",
    "content": "<pre><b>Лекция 11</b><br><b>Случайные переменные и их распределения</b><br><i>(Как математика описывает хаос: от кубиков до Big Data)</i><br><br><b>1. Что такое случайная переменная?</b><br><b>Случайная переменная (величина)</b> — это числовая функция, которая ставит в соответствие каждому исходу эксперимента определённое значение.<br><b>Примеры:</b><br>Число орлов при 10 подбрасываниях монеты.<br>Время ожидания автобуса на остановке.<br>Рост случайно выбранного человека.<br><b>Типы:</b><br><b>Дискретные</b> — принимают отдельные значения (например, целые числа).<br><b>Непрерывные</b> — принимают любые значения в интервале (например, вещественные числа).<br><br><b>2. Дискретные распределения</b><br><b>2.1. Биномиальное распределение</b><br><b>Когда использовать?</b>\nМоделирует число успехов в серии из <b>n</b> независимых испытаний с вероятностью успеха <b>p</b> в каждом.<br><b>Формула:</b><br>P(k)=C_n^k⋅p^k⋅(1−p)^(n−k)<br><b>Пример:</b>\nВероятность выпадения 3 орлов при 5 подбрасываниях монеты (p=0.5):<br>P(3)=C_5^3⋅0.53⋅0.52=10⋅0.125⋅0.25=0.3125.<br><b>Код на Python:</b><br>from scipy.stats import binom<br><br>n = 5<br>p = 0.5<br>k = 3<br>prob = binom.pmf(k, n, p)<br>print(f\"Вероятность: {prob:.4f}\")  # 0.3125<br><br><b>2.2. Распределение Пуассона</b><br><b>Когда использовать?</b>\nМоделирует число редких событий за фиксированный интервал времени (например, звонки в кол-центр за час).<br><b>Формула:</b><br>P(k)=(λ^k⋅e^−λ) / k!<br>где λ — среднее число событий.<br><b>Пример:</b>\nЕсли в магазин за час приходит в среднем 4 клиента (λ=4), какова вероятность прихода 2 клиентов?<br>P(2) = 4^2⋅e^−4 / 2!=16⋅0.01832≈0.1465<br><b>Код на Python:</b><br>from scipy.stats import poisson<br><br>lambda_ = 4<br>k = 2<br>prob = poisson.pmf(k, lambda_)<br>print(f\"Вероятность: {prob:.4f}\")  # 0.1465<br><br><b>2.3. Геометрическое распределение</b><br><b>Когда использовать?</b>\nМоделирует число испытаний до первого успеха.<br><b>Формула:</b><br>P(k)=(1−p)k−1⋅p<br><b>Пример:</b>\nВероятность, что первый орёл выпадет на 3-м подбрасывании (p=0.5):<br>P(3)=0.52⋅0.5=0.125.<br><b>Код на Python:</b><br>from scipy.stats import geom<br><br>p = 0.5<br>k = 3<br>prob = geom.pmf(k, p)<br>print(f\"Вероятность: {prob:.4f}\")  # 0.125<br><br><b>3. Непрерывные распределения</b><br><b>3.1. Нормальное распределение (Гаусса)</b><br><b>Когда использовать?</b>\nМоделирует естественные процессы (рост, ошибки измерений, оценки IQ).<br><b>Пример:</b>\nРост взрослых мужчин (μ = 175 см, σ = 10 см). Вероятность, что рост человека между 165 и 185 см:<br>from scipy.stats import norm<br><br>mu = 175<br>sigma = 10<br>prob = norm.cdf(185, mu, sigma) - norm.cdf(165, mu, sigma)<br>print(f\"Вероятность: {prob:.4f}\")  # ~0.6827 (правило 68-95-99.7)<br><br><b>3.2. Экспоненциальное распределение</b><br><b>Когда использовать?</b>\nМоделирует время между событиями (например, время до поломки прибора).<br><b>Формула плотности:</b><br>f(x)=λ⋅e^(−λx)<br><b>Пример:</b>\nЕсли среднее время между заказами в интернет-магазине 10 минут (λ=0.1<i>λ</i>=0.1), какова вероятность, что следующий заказ придёт в течение 5 минут?<br>from scipy.stats import expon<br><br>lambda_ = 0.1<br>prob = expon.cdf(5, scale=1/lambda_)<br>print(f\"Вероятность: {prob:.4f}\")  # ~0.3935<br><br><b>3.3. Равномерное распределение</b><br><b>Когда использовать?</b>\nВсе исходы в интервале [a,b][<i>a</i>,<i>b</i>] равновероятны.<br><b>Формула плотности:</b><br>f(x)=1b−a   для a≤x≤b<br><b>Пример:</b>\nГенерация случайного числа от 2 до 5:<br>import numpy as np<br><br>a, b = 2, 5<br>sample = np.random.uniform(a, b)<br>print(f\"Случайное число: {sample:.2f}\")  # Например, 3.78<br><br><b>4. Как выбрать распределение?</b><br><b>Анализируйте природу данных:</b><br>Дискретные события (биномиальное, Пуассона).<br>Время/расстояния (экспоненциальное, нормальное).<br><b>Стройте гистограммы</b> для визуальной проверки.<br><b>Используйте статистические тесты</b> (например, критерий Колмогорова-Смирнова).<br><br><b>5. Визуализация распределений</b><br><b>Пример с нормальным распределением:</b><br>import matplotlib.pyplot as plt<br>import numpy as np<br><br>mu, sigma = 0, 1<br>data = np.random.normal(mu, sigma, 1000)<br><br>plt.hist(data, bins=30, density=True, alpha=0.6)<br>x = np.linspace(-4, 4, 100)<br>plt.plot(x, norm.pdf(x, mu, sigma), 'r-', lw=2)<br>plt.title(\"Нормальное распределение\")<br>plt.show()<br><br><b>6. Практические задачи</b><br><b>6.1. Задача о качестве продукции</b><br><b>Условие:</b> Завод производит микросхемы с вероятностью брака 5%. Какова вероятность, что в партии из 100 микросхем будет не более 3 бракованных?<br><b>Решение (биномиальное распределение):</b><br>prob = binom.cdf(3, 100, 0.05)<br>print(f\"Вероятность: {prob:.4f}\")  # ~0.2578<br><br><b>6.2. Задача о времени отклика сервера</b><br><b>Условие:</b> Среднее время отклика сервера — 2 секунды. Какова вероятность, что время отклика превысит 5 секунд?<br><b>Решение (экспоненциальное распределение):</b><br>lambda_ = 1/2<br>prob = 1 - expon.cdf(5, scale=1/lambda_)<br>print(f\"Вероятность: {prob:.4f}\")  # ~0.0821<br><br></pre>"
}