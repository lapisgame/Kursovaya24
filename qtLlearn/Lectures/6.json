{
    "index": 6,
    "title": "Лекция 6",
    "content": "<pre><b>Лекция 6</b><br>Строки и срезы строк в Python<br><br><b>1. Что такое строка?</b><br>Строка (str) — это неизменяемая последовательность символов. В  строки можно создавать с помощью:<br>Одинарных кавычек: 'Привет'<br>Двойных кавычек: \"Hello\"<br>Тройных кавычек (для многострочных строк):<br>text = \"\"\"Первая строка<br>Вторая строка<br>Третья строка\"\"\"<br><br><i><b>Важно:</b></i><br>Строки нельзя изменить после создания (как и кортежи).<br>Каждый символ имеет свой индекс (как в списках).\n<br><br><b>2. Индексация и срезы</b><br>2.1. Обращение к символам<br>Как и в списках, можно обращаться к отдельным символам по индексу:<br><br>s = \"\"<br>print(s[0])   # 'P' (первый символ)<br>print(s[-1])  # 'n' (последний символ)<br>2.2. Срезы (slicing)<br>Синтаксис: строка[начало:конец:шаг]<br>начало — индекс начала (включительно).<br>конец — индекс конца (не включается).<br>шаг — через сколько символов брать (по умолчанию 1).<br><br>Примеры:<br>s = \"Программирование\"<br>print(s[0:6])      # 'Програ' (символы с 0 по 5)<br>print(s[7:])       # 'мирование' (с 7 до конца)<br>print(s[:6])       # 'Програ' (с начала до 5)<br>print(s[::2])      # 'Пормиоаи' (каждый второй символ)<br>print(s[::-1])     # 'еивонимаргорП' (разворот строки)<br><br>Особенности:<br>Если не указать начало или конец, срез идёт от начала/до конца.<br>Отрицательные индексы работают как с конца: s[-5:-2].<br><br><br><b>3. Операции со строками</b><br>3.1. Конкатенация (склейка)<br>s1 = \"Hello\"<br>s2 = \"World\"<br>print(s1 + \" \" + s2)  # \"Hello World\"<br><br>3.2. Умножение строк<br>print(\"Ha\" * 3)  # \"HaHaHa\"<br><br>3.3. Проверка вхождения подстроки<br>text = \"Программирование на \"<br>print(\"\" in text)  # True<br>print(\"Java\" not in text) # True<br><br><br><b>4. Методы строк</b><br>4.1. Регистр символов<br>s = \"Hello, World!\"<br>print(s.lower())      # 'hello, world!'  <br>print(s.upper())      # 'HELLO, WORLD!'  <br>print(s.title())      # 'Hello, World!'  <br>print(s.swapcase())   # 'hELLO, wORLD!'  <br><br>4.2. Поиск и замена<br>s = \"Я изучаю  и  это круто\"<br>print(s.find(\"\"))     # 8 (индекс первого вхождения)<br>print(s.rfind(\"\"))    # 18 (поиск справа)<br>print(s.replace(\"\", \"C++\"))  # Замена всех вхождений<br><br>4.3. Разделение и склейка<br>text = \"Яблоко,Груша,Апельсин\"<br>fruits = text.split(\",\")  # ['Яблоко', 'Груша', 'Апельсин']<br>new_text = \" | \".join(fruits)  # 'Яблоко | Груша | Апельсин'<br><br>4.4. Удаление пробелов<br>s = \"   Hello World!   \"<br>print(s.strip())   # 'Hello World!' (удаляет пробелы с двух сторон)<br>print(s.lstrip())  # 'Hello World!   ' (слева)<br>print(s.rstrip())  # '   Hello World!' (справа)<br><br>4.5. Проверки содержимого<br>print(\"123\".isdigit())   # True (только цифры)<br>print(\"abc\".isalpha())   # True (только буквы)<br>print(\"abc123\".isalnum()) # True (буквы или цифры)<br>print(\"Hello\".startswith(\"He\"))  # True<br>print(\"World\".endswith(\"ld\"))    # True<br><br><br><b>5. Форматирование строк</b><br>5.1. f-строки ( 3.6+)<br>name = \"Алиса\"<br>age = 25<br>print(f\"Имя: {name}, Возраст: {age}\")  # Имя: Алиса, Возраст: 25<br><br>5.2. Метод .format()<br>print(\"{} + {} = {}\".format(2, 3, 5))  # 2 + 3 = 5<br><br>5.3. Старый стиль (%) — лучше не использовать<br>print(\"Число: %d, Строка: %s\" % (10, \"Text\"))  # Число: 10, Строка: Text<br><br><br><b>6. Экранирование символов</b><br>Если нужно вставить спецсимволы:<br>print(\"Первая строка\\nВторая строка\")  # \\n — перенос строки<br>print(\"Кавычки: \\\"\\\"\")                # Экранирование кавычек<br>print(\"Путь: C:\\\\Folder\\\\file.txt\")   # Экранирование обратного слеша<br><br><br><b>7. Практические примеры</b><br>7.1. Разбор URL<br>url = \"https://example.com/page?query=\"<br>protocol = url.split(\"://\")[0]  # 'https'<br>domain = url.split(\"/\")[2]      # 'example.com'<br><br>7.2. Подсчёт слов в тексте<br>text = \"Привет мир, мир большой\"<br>words = text.split()<br>print(f\"Всего слов: {len(words)}\")  # 4<br></pre>"
}